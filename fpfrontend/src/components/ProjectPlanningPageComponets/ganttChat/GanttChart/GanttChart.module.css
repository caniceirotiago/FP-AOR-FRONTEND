.mainGanttContainer {
  display: flex;
  height: 100%;
  width: 100%;
  margin-right: 30px;
}

.ganttContainer {
  position: relative;
  flex: 1;
  width: 100vh;
  height: 99%;
  border: 1px solid #ccc;
  overflow-x: auto; 
  white-space: nowrap;
  display: flex;
  flex-direction: column;
}

.timeline {
  display: flex;
  position: sticky;
  top: 0;
  background: #f9f9f9;
  z-index: 1;
}

.timelineDate {
  flex: 0 0 40px; /* Largura fixa para cada dia */
  padding: 5px;
  text-align: center;
  font-size: 12px;
  white-space: nowrap;
  overflow: hidden;
  position: relative;
}

.timelineDate:after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 1px;
  background: #ccc; /* Cor da linha que indica o início do dia */
}

.taskBars {
  position: relative;
}

.taskBar {
  position: absolute;
  height: 30px;
  background-color: transparent;
  display: flex;
  align-items: center;
  margin: 2px 0;
  transition: all 0.05s ease;
  z-index: 2;
}

.taskHandleStart,
.taskHandleEnd {
  width: 10px;
  height: 100%;
  background-color: darkblue;
  cursor: ew-resize;
}

.taskHandleStart {
  position: absolute;
  left: 0;
  border-bottom-left-radius: 5px;
  border-top-left-radius: 5px;
  overflow: hidden;
}

.taskContent {
  background-color: lightblue;
  padding: 5px 10px;
  color: white;
  flex-grow: 1;
  text-align: center; /* Alinhar o texto centralizado */
  cursor: move;
  border-radius: 5px;
  overflow: hidden;
}

.taskHandleEnd {
  position: absolute;
  right: 0;
  border-bottom-right-radius: 5px;
  border-top-right-radius: 5px;
  overflow: hidden;
}

.taskCircleStart,
.taskCircleEnd {
  width: 10px;
  height: 10px;
  background-color: transparent;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  cursor: pointer;
  z-index: 2;
}

.taskBar:hover .taskCircleStart,
.taskBar:hover .taskCircleEnd,
.taskCircleEnd:hover,
.taskCircleStart:hover {
  background-color: blue;
}

.taskCircleStart {
  left: -10px; /* Ajuste a posição conforme necessário */
}

.taskCircleEnd {
  right: -10px; /* Ajuste a posição conforme necessário */
}
.circleDragHoovered {
  background-color: blue;
}

.temporaryDependencyLine {
  position: absolute;
  background-color: transparent;
  border-top: 1px dashed darkblue;
  transform-origin: top left;
  z-index: 1;
}

.dependenciesContainer {
  position: relative;
  z-index: 1;
}

.fixedDependencyLine {
  pointer-events: none;
}

.fixedLine {
  pointer-events: all;
  stroke-width: 5px; /* Ajuste para um stroke-width menor */
  transition: stroke-width 0.3s ease, stroke 0.3s ease;
}
.fixedLine > * {
  pointer-events: all;

}

.fixedLine:hover {
  stroke-width: 10px;
  stroke: blue;
  cursor: pointer;
}

.dependencyLineWrapper {
  position: relative;
  z-index: 1;
}
